============================================
 Read-Access Geo Redundant Storage リリース
============================================
BUILD 2013で予告されていたStorageの新機能の最後の一つ Read-Access Geo Redundant Storage (RA-GRS) がリリースされました。これは、GEO replication先をread onlyでアクセスできるようになる機能です。

`Windows Azure Storage Redundancy Options and Read Access Geo Redundant Storagea <http://blogs.msdn.com/b/windowsazurestorage/archive/2013/12/11/introducing-read-access-geo-replicated-storage-ra-grs-for-windows-azure-storage.aspx>`_

現状Previewなので、まずは `Windows Azure Preview <https://account.windowsazure.com/PreviewFeatures>`_  のページで申し込みをする必要があります。



後で追々細かいところを検証しますが、とりあえずアクセスしてみます。

RA-GRSの新機能を使うには REST version 2013-08-15 の `Storage Client Library 3.0 <http://www.nuget.org/packages/WindowsAzure.Storage>`_ が必要です。3.0には、Blobs, Tables and Queues のLast Sync Time をクエリーする機能と primary がtimes outしたときに secondary に自動的に retry する機能があります。

CloudBlobClient, CloudTableClient, CloudQueueClient の GetServiceStats API
=============================================================================


LocationMode property
=====================
このプロパティは、primary が落ちた時の secondary endpoint の扱いを定義します。

a. PrimaryOnly: 全てのRead requestは primary endpoint だけに送られます
b. PrimaryThenSecondary: Read requests は、最初 primary に、retryable error な場合は、secondary、primary の順で再試行を繰り返します。もし、secondary の objectへのアクセスが 404 (Not Found) で返した場合 primary へのリトライに戻ります
c. SecondaryOnly: secondary endpoint からの読み込みになります

新しい retry policy interface IExtendedRetryPolicy
==================================================
リトライを拡張して
has been introduced to allow users to extend retries in which target location for subsequent retries can be changed. 
This interface provides a new method Evaluate which replaces ShouldRetry. Note that ShouldRetry is still retained in this interface for backward compatibility but is unused.


The Evaluate method allows users to return RetryInfo which contains the location to use on subsequent retry in addition to the RetryInterval.

In this example of retry class implementation, we change the target location to be secondary only on the last attempt.

public RetryInfo Evaluate(RetryContext retryContext, OperationContext operationContext)
{
    statusCode = retryContext.LastRequestResult.HttpStatusCode;

    if (retryContext.CurrentRetryCount >= this.maximumAttempts 
        || ((statusCode >= 300 && statusCode < 500 && statusCode != 408)
        || statusCode == 501 // Not Implemented
        || statusCode == 505 // Version Not Supported
            ))
    {
        // do not retry
        return null;
    }

    RetryInfo info = new RetryInfo();
    info.RetryInterval = EvaluateBackoffTime();
    if (retryContext.CurrentRetryCount == this.maximumAttempts - 1)
    {
        // retry against secondary
        info.TargetLocation = StorageLocation.Secondary;
    }

    return info;
}



The important values for this are:


LocationModeのデフォルトは、PrimaryOnly
RA-GRSが有効になっていないと、名前解決が出来ない。



.. author:: default
.. categories:: none
.. tags:: none
.. comments::
