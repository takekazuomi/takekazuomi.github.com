=======================================
 Java Cloud Service Diagnostics Plugin
=======================================
Cloud Servicen には、Diagnostics の Pluginがありますが、Eclispe Azure Pluginで作成される、Azure Cloud ServiceのWorkerRoleでは、有効になっていません。
ここでは、Diagnostics Plugin を使って、Java アプリケーションのLogをAzure Blobへ転送する方法を説明します。

Overview：設定方法の概要
========================
下記の５つのステップを踏みます。

1. Local Storageを定義する
2. csdefでDiagnosticsをImportする
3. cscfgでDiagnosticsのConnectionStringを定義する
4. Diagnosticsnの設定をdiagnostics.wadcfgに記述してWorkerRoleのRootに配置
5. アプリケーションのログは、「１」に出力する


1. Local Storageの定義
======================
Eclispe Azure Pluginで、Azure ProjectのRoleのプロパティを開いて、Local Storageの設定をします。下記の画面のような設定をすると、環境変数LOG_HOMEに、Local Storage Resouce ``LocalStorage`` のフルパスが設定されます。


.. image:: 20140610_screen001.png
   :alt: Local Storageの設定
   :align: center


2. csdefのDiagnosticsをImport
=============================
下記の ``Import Diagnostics`` と書いてある行を追加してください、Diagnostics Plugin Moduleをインポート設定です。この例をでは、remote desktop 設定もされています。

.. literalinclude:: ServiceDefinition.csdef
   :language: xml
   :lines: 19-24


3. cscfgのDiagnosticsのConnectionStringを定義
=============================================
下記の ``Microsoft.WindowsAzure.Plugins.Diagnostics.ConnectionString`` の行を追加して下さい。valueの部分には、logを転送する、storage accountの接続文字列を記述します。

.. literalinclude:: ServiceConfiguration.cscfg
   :language: xml
   :lines: 1-8


4. Diagnosticsnの設定をdiagnostics.wadcfgに記述してWorkerRoleのRootに配置
=========================================================================
``診断構成ファイル diagnostics.wadcfg`` に、 diagnostics plugin の設定を記述します。 ここでは、Local Storage Resouce ``logs`` として定義場所にあるファイルを定期的に転送する設定を書いています。それ以外に各種設定が記述できます、 `Windows Azure 診断構成ファイルの使用方法 <http://msdn.microsoft.com/ja-jp/windowsazure/dn221934.aspx>`_ などを参考にしてください。 VSを使うと、GUIで設定することもできます。 `Azure 診断の構成 <http://msdn.microsoft.com/ja-jp/library/dn186185.aspx>`_


.. literalinclude:: diagnostics.wadcfg
   :language: xml


診断構成ファイルは、Roleのルートディレクトリ、つまりAzure Projectのapproot ディレクトリに置きます。

.. literalinclude:: tree.txt
   :language: bash


5. アプリケーションのログ出力する
=============================================
利用しているlogging frameworkによって変わりますが、log4jでは、Javaのsystem property に環境変数（今回は、LOG_HOME)の値をセットして、logging frameworkの設定ファイルで参照するという形を取ります。Javaのlogging apiが、site.logdir を参照するので、 ``-Dsite.logdir="%LOG_HOME%"`` のようにすると、従来ファイルに出ていたものを一括して Local Storage Resouce に書き出すことができます。



.. author:: default
.. categories:: none
.. tags:: none
.. comments::
