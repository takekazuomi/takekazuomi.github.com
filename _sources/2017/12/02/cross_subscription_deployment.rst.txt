複数Subscriptionへの同時デプロイ
================================

この記事は `Microsoft Azure Advent Calendar 2017 <https://qiita.com/advent-calendar/2017/azure>`_  の2日目の記事です。

ちょっと便利な、ARM template の小技を紹介します。
以前から、１つのテンプレートを使って、複数のリソースグループへデプロイすることができましたが [#ref1]_ 。さらに、 ``Microsoft.Resources/deployments`` の ``API Version: 2017-05-10`` からは、別のサブスクリプションへもデプロイできるようになりました。

リソースを異なるサブスクリプションにデプロイするには、別のリソースグループへデプロイする時と同じように、nested template( ``Microsoft.Resources/deployments`` ) を使います。 ``Microsoft.Resources/deployments`` の、subscriptionId プロパティに指定したサブスクリプションにnested templateで定義されたリソースが展開されるのです、簡単ですね。

ちょっとやってみましょう、下にテンプレートの抜粋を見て下さい。 [#ref2]_ テンプレートは、別のリソースグループへデプロイする時とほぼ同じで、8行目のsubscriptionId のところが違うぐらいなのがわかります。

.. raw:: html

   <script src="https://gist.github.com/takekazuomi/e8bdc99a8fa56f5875e753915001bdc6.js?file=deploystorage-chunk.json"></script>


これで上手くデプロイできるか確認しましょう。 local subscription (083c462a-7c24-4a16-8bfe-876cb0ab434b) を選択した状態でデプロイするとストレージアカウント(東日本)を作成し、同時に remote subscription (ff05d8ad-12ee-4c68-97bb-78baefa1c01a) にもストレージアカウント（西日本）を作成します。

まずは、サブスクリプションを切替ながら、リソースグループを両側に用意します。

.. code:: posh

   $ Select-AzureRmSubscription -SubscriptionId 083c462a-7c24-4a16-8bfe-876cb0ab434b
   $ New-AzureRmResourceGroup -Name LocalRG -Location japaneast

   $ Select-AzureRmSubscription -SubscriptionId ff05d8ad-12ee-4c68-97bb-78baefa1c01a
   $ New-AzureRmResourceGroup -Name RemoteRG -Location japanwest


これでリソースグループが出来たので、local subscription を選択し直して、前記のテンプレートをデプロイします。

.. code:: posh

   $ Select-AzureRmSubscription -SubscriptionId 083c462a-7c24-4a16-8bfe-876cb0ab434b
   $ New-AzureRmResourceGroupDeployment -TemplateFile .\deploystorage.json `
          -StorageAccountName kyrtlocal01 `
          -ResourceGroupName LocalRG `
          -RemoteResourceGroup RemoteRG `
          -RemoteSubscriptionId ff05d8ad-12ee-4c68-97bb-78baefa1c01a `
          -RemoteStorageAccountName kyrtremote01


思った通りに出来ているか確認しましょう。

.. code:: posh


   $ Select-AzureRmSubscription -SubscriptionId 083c462a-7c24-4a16-8bfe-876cb0ab434b
   $ Get-AzureRmStorageAccount -ResourceGroupName RemoteRG | fl ResourceGroupName,Id, Location

   ResourceGroupName : localrg
   Id                : /subscriptions/08.../resourceGroups/localrg/providers/Microsoft.Storage/storageAccounts/kyrtlocal01
   Location          : japaneast


   $ Select-AzureRmSubscription -SubscriptionId ff05d8ad-12ee-4c68-97bb-78baefa1c01a
   $ Get-AzureRmStorageAccount -ResourceGroupName RemoteRG | fl ResourceGroupName,Id, Location

   ResourceGroupName : remoterg
   Id                : /subscriptions/ff.../resourceGroups/remoterg/providers/Microsoft.Storage/storageAccounts/kyrtremote01
   Location          : japanwest


ストレージアカウントが２つ作成され、それぞれ別のサブスクリプションに東日本と西日本に配置されているのが確認できました。複数サブスクリプションへの配置が必要なケースはあまり無い気もしますが、なかなか面白いですね。

注意
----
テンプレートの、 `38行目 <https://gist.github.com/takekazuomi/e8bdc99a8fa56f5875e753915001bdc6#file-deploystorage-json-L38>`_ で、location を西日本を直接指定しています。 ここを、 ``location": "[resourceGroup().location]`` としたら、locationが東日本になってしました。 ``resourceGroup()`` は、親のdeploymentsリソースを指すようです。ちょっと混乱しますが、「まあ納得できる範囲かな」という気はします。




参照
----

.. [#ref1] `複数のリソース グループに Azure リソースをデプロイする <https://docs.microsoft.com/ja-jp/azure/azure-resource-manager/resource-manager-cross-resource-group-deployment>`
.. [#ref2] 完全なテンプレート `deploystorage.json <https://gist.github.com/takekazuomi/e8bdc99a8fa56f5875e753915001bdc6#file-deploystorage-json>`


.. author:: default
.. categories:: none
.. tags:: none
.. comments::
