Azure に OAuth 2.0 Device Flow でログインする
=============================================
この前 **az login** でログイン出来なくなった時に、azure cli 2.0 のコー
ドを見ていたら、Azureのドキュメントには出てこない（見慣れない）使い方をしてたので確
認も兼ねて生REST、OAuth 2.0 Device Flow [#ref1]_ でAzrueにloginして Beare Tokenを取得するコンソールプログラム **azlogin** [#ref2]_  を書いてみた。

.. image:: https://c1.staticflickr.com/3/2871/34014638600_dbb3a232b1_c.jpg
   :target: https://flic.kr/p/TPKV1d
   :alt: curry
   :align: center

|

使い方
======
**azlogin** を実行すると、azure cli 2.0 と同じように、デバイスコードと入力
用のURLが表示される。この画面のメッセージが **azure cli 2.0** と一文一
句違わず同じなのは、AIPが返して来るメッセージをそのまま表示してるから
だ。

ログインに成功すると、アカウントに紐づいたテナントを全部取得して、テナ
ントのアクセストークンを取得し、それを使ってサブスクリプションの情報を
取得。結果をJSONで出力する。


.. code:: posh

   $ .\azlogin
   To sign in, use a web browser to open the page https://aka.ms/devicelogin and enter the code G9HFZ4NCY to authenticate.
   ....
   [
      {
        "tenantId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionName": "Developer Program Benefit",
        "bearer": "********************************************a"
      },
      {
        "tenantId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionName": "foo",
        "bearer": "********************************************a"
      },
      {
        "tenantId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionId": "xxxxxxxx-xxxx-xxxxxxxxx-xxxxxxxxxxxx",
        "subscriptionName": "kinmugi",
        "bearer": "********************************************a"
      }
   ]


このJSONから、Bearer token を取得し変数に保存するして置き、APIの呼び出しをしてみよう。

まずは、jp (JMESPath) の式を用意する。短いのでコマンドラインにそのまま
書きたいところだが、Windowsだとエスケープ関係が難しすぎる（cmd.exeや、
powershellでは）ので、諦めてファイルに書く。

この例だと、subscriptionName が 'kinmugi'のサブスクリプションのBearer tokenを取り
出している。Windowsだと素直にPowerShellで書いたほうが楽な気がする。最近、JMESPath が気に入っているので、あえてjpを使う。

ここでは、本物の **curl** を使って、リソースグループの一覧を取得してい
る。PowerShellだとcurlでaliasが切ってあるが使えないので、本物を入れて
alias を切った方が良い。

.. code:: posh

   $ cat filter.jp
   [?subscriptionName == 'kinmugi'].bearer|[0]

   $ $bearer = (.\azlogin | jp -u -e filter.jp)

   $ curl -H  "Authorization: Bearer $bearer" "https://management.azure.com/subscriptions/xxxxxxxx-.../resourcegroups?api-version=2017-05-10"

Bearer tokenさえ手に入れれば、こんな感じでサクッと管理APIが呼べる。

最後に
======
Azureのドキュメントだとごちゃごちゃしてて良くわからないが、認証は基本
普通のOAuth 2.0 なのでそれほど難しくない。このあたりで困ったら、OAuth
2.0 のドキュメント（Googleのとか 、翻訳もある [#ref3]_ ）を読むと良い。
Azure固有の問題は、松崎さんのブログ [#ref4]_ がお勧めだ。

今回は、生RESTだけで構築したが、認証だけならそれほど難しいことはない。
本格的にAzureを触ろうと思うとモデルが欲しくなり。触っていくと大量のモ
デルが出てくるので自前で作るのはとてもメンドクサイ。その場合はAzure
SDKを使うと既にモデルが用意去れているので便利だ。



参考
====

.. [#ref1] `Using OAuth 2.0 to Access Google APIs <https://developers.google.com/identity/protocols/OAuth2>`_ , `OAuth 2.0 for TV and Limited-Input Device Applications <https://developers.google.com/identity/protocols/OAuth2ForDevices>`_ ,
.. [#ref2] `Azure Login OAuth 2.0 Device Flow Console Program. <https://github.com/takekazuomi/azlogin>`_
.. [#ref3] `OAuth 2.0 Flow: Devices <https://developers.google.com/youtube/v3/guides/auth/devices?hl=ja>`_ YouTube Data APIのドキュメントだが、翻訳されている。
.. [#ref4] `Login UI が出せない Client の OAuth フロー (Azure AD) <https://blogs.msdn.microsoft.com/tsmatsuz/2016/03/12/azure-ad-device-profile-oauth-flow/>`_ この記事より松崎さんのブログを読んだほうが良いだろう。

下記のコードも参考になる

* `Invoking an API protected by Azure AD from a text-only device <https://azure.microsoft.com/en-us/resources/samples/active-directory-dotnet-deviceprofile/>`_

.. author:: default
.. categories:: Azure
.. tags:: none
.. comments::
